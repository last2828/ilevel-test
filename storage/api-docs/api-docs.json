{
    "openapi": "3.0.0",
    "info": {
        "title": "Ilevel API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Login user",
                "description": "Login user",
                "operationId": "App\\Http\\Controllers\\API\\Auth\\LoginController::login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/users/logout": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Logout user",
                "description": "Logout user",
                "operationId": "App\\Http\\Controllers\\API\\Auth\\LogoutController::logout",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Bearer lbsiiejroiehfuwoefnelfiower2432420agfasdfsadfasdgrewgwergwergwergewrg",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "description": "Register a new user",
                "operationId": "App\\Http\\Controllers\\API\\Auth\\RegisterController::register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "description": "Get all categories",
                "operationId": "App\\Http\\Controllers\\API\\CategoryController::index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Create a new category",
                "operationId": "App\\Http\\Controllers\\API\\CategoryController::store",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Bearer lbsiiejroiehfuwoefnelfiower2432420agfasdfsadfasdgrewgwergwergwergewrg",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/categories/{category_id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by id",
                "description": "Get category by id with all products",
                "operationId": "App\\Http\\Controllers\\API\\CategoryController::show",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "1",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category by id",
                "description": "Update category by id with all relations",
                "operationId": "App\\Http\\Controllers\\API\\CategoryController::update",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "1",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Bearer lbsiiejroiehfuwoefnelfiower2432420agfasdfsadfasdgrewgwergwergwergewrg",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category by id",
                "description": "Delete category by id with all relations",
                "operationId": "App\\Http\\Controllers\\API\\CategoryController::destroy",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "1",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Bearer lbsiiejroiehfuwoefnelfiower2432420agfasdfsadfasdgrewgwergwergwergewrg",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/products": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Create a new product",
                "operationId": "App\\Http\\Controllers\\API\\ProductController::store",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Bearer lbsiiejroiehfuwoefnelfiower2432420agfasdfsadfasdgrewgwergwergwergewrg",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/products/{product_id}": {
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update product by id",
                "description": "Update category by id with all relations",
                "operationId": "App\\Http\\Controllers\\API\\ProductController::update",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "1",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Bearer lbsiiejroiehfuwoefnelfiower2432420agfasdfsadfasdgrewgwergwergwergewrg",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete product by id",
                "description": "Delete product by id with all relations",
                "operationId": "App\\Http\\Controllers\\API\\ProductController::destroy",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "1",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Bearer lbsiiejroiehfuwoefnelfiower2432420agfasdfsadfasdgrewgwergwergwergewrg",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "LoginUserRequest": {
                "title": "Login user request",
                "description": "Login Userrequest body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "User email",
                        "type": "string",
                        "example": "John@example.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "User password",
                        "type": "string",
                        "example": "mypassword1"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title of the category",
                        "type": "string",
                        "example": "Plans and Cars"
                    },
                    "products": {
                        "title": "Product",
                        "description": "Product category model",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title of the product",
                        "type": "string",
                        "example": "Plan"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the product",
                        "type": "string",
                        "example": "This is product description"
                    },
                    "model": {
                        "title": "Model",
                        "description": "Model of the product",
                        "type": "string",
                        "example": "Model"
                    },
                    "categories": {
                        "title": "Category",
                        "description": "Product category model",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "User name",
                        "type": "string",
                        "example": "John"
                    },
                    "email": {
                        "title": "Email",
                        "description": "User email",
                        "type": "string",
                        "example": "John@example.com"
                    },
                    "token_type": {
                        "title": "token type",
                        "description": "token type",
                        "type": "string",
                        "example": "Bearer"
                    },
                    "token": {
                        "title": "token",
                        "description": "token",
                        "type": "string",
                        "example": "d;sf;sdbg;afaisfghlierjwoierh7492342pkrof34f845y034u34"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "RegisterUserRequest": {
                "title": "Register user request",
                "description": "Register user request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "User name",
                        "type": "string",
                        "example": "John"
                    },
                    "email": {
                        "title": "Email",
                        "description": "User email",
                        "type": "string",
                        "example": "John@example.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "User password",
                        "type": "string",
                        "example": "mypassword1"
                    },
                    "password_confirmation": {
                        "title": "password_confirmation",
                        "description": "User password",
                        "type": "string",
                        "example": "mypassword1"
                    }
                },
                "type": "object"
            },
            "CategoryResource": {
                "title": "CategoryResource",
                "description": "Category resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CategoryResource"
                }
            },
            "ProductResource": {
                "title": "ProductResource",
                "description": "Product resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductResource"
                }
            },
            "StoreCategoryRequest": {
                "title": "Store Category request",
                "description": "Store Category request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "name",
                        "description": "Name of the new category",
                        "type": "string",
                        "example": "Plans and Cars"
                    }
                },
                "type": "object"
            },
            "StoreProductRequest": {
                "title": "Store Product request",
                "description": "Store Product request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "name",
                        "description": "Name of the new product",
                        "type": "string",
                        "example": "Plan"
                    },
                    "model": {
                        "title": "model",
                        "description": "Model of the new product",
                        "type": "string",
                        "example": "Model"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new product",
                        "type": "string",
                        "example": "This is product description"
                    },
                    "categories": {
                        "title": "categories",
                        "description": "Categories id for new product",
                        "type": "string",
                        "example": "[1,2,3]"
                    }
                },
                "type": "object"
            },
            "UpdateCategoryRequest": {
                "title": "Update Category request",
                "description": "Update Category request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "name",
                        "description": "New name of the current category",
                        "type": "string",
                        "example": "Plans and Cars"
                    }
                },
                "type": "object"
            },
            "UpdateProductRequest": {
                "title": "Update Product request",
                "description": "Update Product request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "title": {
                        "title": "name",
                        "description": "name of the product",
                        "type": "string",
                        "example": "Plan"
                    },
                    "model": {
                        "title": "model",
                        "description": "model of the product",
                        "type": "string",
                        "example": "Model"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the product",
                        "type": "string",
                        "example": "This is product description"
                    },
                    "categories": {
                        "title": "categories",
                        "description": "Categories id for product",
                        "type": "string",
                        "example": "[1,2,3]"
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        []
    ]
}